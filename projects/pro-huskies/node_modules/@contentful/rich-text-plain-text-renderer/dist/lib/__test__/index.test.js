"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var rich_text_types_1 = require("@contentful/rich-text-types");
var index_1 = require("../index");
describe('documentToPlainTextString', function () {
    it('returns empty string when given an empty document', function () {
        var document = {
            nodeType: rich_text_types_1.BLOCKS.DOCUMENT,
            data: {},
            content: [],
        };
        expect((0, index_1.documentToPlainTextString)(document)).toEqual('');
    });
    it('handles a simple case', function () {
        var document = {
            nodeType: rich_text_types_1.BLOCKS.DOCUMENT,
            data: {},
            content: [
                {
                    nodeType: rich_text_types_1.BLOCKS.PARAGRAPH,
                    data: {},
                    content: [
                        {
                            nodeType: 'text',
                            data: {},
                            value: 'Trout is a',
                            marks: [],
                        },
                        {
                            nodeType: 'text',
                            data: {},
                            value: ' seafood d',
                            marks: [{ type: 'italic' }],
                        },
                        {
                            nodeType: 'text',
                            data: {},
                            value: 'elicacy.',
                            marks: [],
                        },
                    ],
                },
            ],
        };
        expect((0, index_1.documentToPlainTextString)(document)).toEqual('Trout is a seafood delicacy.');
    });
    describe('rendering deeply nested documents', function () {
        var document = {
            nodeType: rich_text_types_1.BLOCKS.DOCUMENT,
            data: {},
            content: [
                {
                    nodeType: rich_text_types_1.BLOCKS.PARAGRAPH,
                    data: {},
                    content: [
                        {
                            nodeType: 'text',
                            value: 'This is text. ',
                            data: {},
                            marks: [{ type: 'bold' }],
                        },
                        {
                            nodeType: 'text',
                            value: '',
                            data: {},
                            marks: [],
                        },
                        {
                            nodeType: 'text',
                            value: 'This is text with some marks.',
                            data: {},
                            marks: [{ type: 'italic' }],
                        },
                        {
                            nodeType: 'text',
                            value: ' ',
                            data: {},
                            marks: [],
                        },
                        {
                            nodeType: rich_text_types_1.INLINES.HYPERLINK,
                            content: [
                                {
                                    nodeType: 'text',
                                    value: 'This is text from a bolded hyperlink.',
                                    data: {},
                                    marks: [{ type: 'bold' }],
                                },
                            ],
                            data: {
                                url: 'https://example.com',
                                title: 'qux',
                            },
                        },
                    ],
                },
                {
                    nodeType: rich_text_types_1.BLOCKS.UL_LIST,
                    data: {},
                    content: [
                        {
                            nodeType: rich_text_types_1.BLOCKS.LIST_ITEM,
                            data: {},
                            content: [
                                {
                                    nodeType: rich_text_types_1.BLOCKS.PARAGRAPH,
                                    data: {},
                                    content: [
                                        {
                                            nodeType: 'text',
                                            value: 'This is a list element in a separate block ',
                                            data: {},
                                            marks: [],
                                        },
                                        {
                                            nodeType: rich_text_types_1.INLINES.HYPERLINK,
                                            content: [
                                                {
                                                    nodeType: 'text',
                                                    value: 'with a link with marks.',
                                                    data: {},
                                                    marks: [],
                                                },
                                            ],
                                            data: {
                                                url: 'https://google.com',
                                                title: 'woo',
                                            },
                                        },
                                    ],
                                },
                            ],
                        },
                        {
                            nodeType: rich_text_types_1.BLOCKS.LIST_ITEM,
                            data: {},
                            content: [
                                {
                                    nodeType: rich_text_types_1.BLOCKS.PARAGRAPH,
                                    data: {},
                                    content: [
                                        {
                                            nodeType: 'text',
                                            value: 'This is a separate list element in the same block.',
                                            data: {},
                                            marks: [],
                                        },
                                    ],
                                },
                            ],
                        },
                    ],
                },
            ],
        };
        it('handles nested nodes gracefully', function () {
            expect((0, index_1.documentToPlainTextString)(document)).toEqual([
                'This is text.',
                'This is text with some marks.',
                'This is text from a bolded hyperlink.',
                'This is a list element in a separate block with a link with marks.',
                'This is a separate list element in the same block.',
            ].join(' '));
        });
        it('defers to the user-supplied block divisor', function () {
            expect((0, index_1.documentToPlainTextString)(document, '\n\n')).toEqual([
                'This is text. This is text with some marks. This is text from a bolded hyperlink.',
                'This is a list element in a separate block with a link with marks.',
                'This is a separate list element in the same block.',
            ].join('\n\n'));
        });
    });
});
//# sourceMappingURL=index.test.js.map