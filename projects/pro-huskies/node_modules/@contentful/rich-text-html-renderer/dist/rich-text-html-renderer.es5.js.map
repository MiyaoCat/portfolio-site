{"version":3,"file":"rich-text-html-renderer.es5.js","sources":["../../../node_modules/escape-html/index.js","../../rich-text-types/src/blocks.ts","../../rich-text-types/src/inlines.ts","../../rich-text-types/src/marks.ts","../../rich-text-types/src/schemaConstraints.ts","../../rich-text-types/src/emptyDocument.ts","../../rich-text-types/src/helpers.ts","../../rich-text-types/src/index.ts","../src/index.ts"],"sourcesContent":["/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n","/**\n * Map of all Contentful block types. Blocks contain inline or block nodes.\n */\nexport enum BLOCKS {\n  DOCUMENT = 'document',\n  PARAGRAPH = 'paragraph',\n\n  HEADING_1 = 'heading-1',\n  HEADING_2 = 'heading-2',\n  HEADING_3 = 'heading-3',\n  HEADING_4 = 'heading-4',\n  HEADING_5 = 'heading-5',\n  HEADING_6 = 'heading-6',\n\n  OL_LIST = 'ordered-list',\n  UL_LIST = 'unordered-list',\n  LIST_ITEM = 'list-item',\n\n  HR = 'hr',\n  QUOTE = 'blockquote',\n\n  EMBEDDED_ENTRY = 'embedded-entry-block',\n  EMBEDDED_ASSET = 'embedded-asset-block',\n  EMBEDDED_RESOURCE = 'embedded-resource-block',\n\n  TABLE = 'table',\n  TABLE_ROW = 'table-row',\n  TABLE_CELL = 'table-cell',\n  TABLE_HEADER_CELL = 'table-header-cell',\n}\n","/**\n * Map of all Contentful inline types. Inline contain inline or text nodes.\n */\nexport enum INLINES {\n  HYPERLINK = 'hyperlink',\n  ENTRY_HYPERLINK = 'entry-hyperlink',\n  ASSET_HYPERLINK = 'asset-hyperlink',\n  RESOURCE_HYPERLINK = 'resource-hyperlink',\n  EMBEDDED_ENTRY = 'embedded-entry-inline',\n  EMBEDDED_RESOURCE = 'embedded-resource-inline',\n}\n","/**\n * Map of all Contentful marks.\n */\nenum MARKS {\n  BOLD = 'bold',\n  ITALIC = 'italic',\n  UNDERLINE = 'underline',\n  CODE = 'code',\n  SUPERSCRIPT = 'superscript',\n  SUBSCRIPT = 'subscript',\n}\n\nexport default MARKS;\n","import { BLOCKS } from './blocks';\nimport { INLINES } from './inlines';\nimport MARKS from './marks';\n\nexport type TopLevelBlockEnum =\n  | BLOCKS.PARAGRAPH\n  | BLOCKS.HEADING_1\n  | BLOCKS.HEADING_2\n  | BLOCKS.HEADING_3\n  | BLOCKS.HEADING_4\n  | BLOCKS.HEADING_5\n  | BLOCKS.HEADING_6\n  | BLOCKS.OL_LIST\n  | BLOCKS.UL_LIST\n  | BLOCKS.HR\n  | BLOCKS.QUOTE\n  | BLOCKS.EMBEDDED_ENTRY\n  | BLOCKS.EMBEDDED_ASSET\n  | BLOCKS.EMBEDDED_RESOURCE\n  | BLOCKS.TABLE;\n\n/**\n * Array of all top level block types.\n * Only these block types can be the direct children of the document.\n */\nexport const TOP_LEVEL_BLOCKS: TopLevelBlockEnum[] = [\n  BLOCKS.PARAGRAPH,\n  BLOCKS.HEADING_1,\n  BLOCKS.HEADING_2,\n  BLOCKS.HEADING_3,\n  BLOCKS.HEADING_4,\n  BLOCKS.HEADING_5,\n  BLOCKS.HEADING_6,\n  BLOCKS.OL_LIST,\n  BLOCKS.UL_LIST,\n  BLOCKS.HR,\n  BLOCKS.QUOTE,\n  BLOCKS.EMBEDDED_ENTRY,\n  BLOCKS.EMBEDDED_ASSET,\n  BLOCKS.EMBEDDED_RESOURCE,\n  BLOCKS.TABLE,\n];\n\nexport type ListItemBlockEnum =\n  | BLOCKS.PARAGRAPH\n  | BLOCKS.HEADING_1\n  | BLOCKS.HEADING_2\n  | BLOCKS.HEADING_3\n  | BLOCKS.HEADING_4\n  | BLOCKS.HEADING_5\n  | BLOCKS.HEADING_6\n  | BLOCKS.OL_LIST\n  | BLOCKS.UL_LIST\n  | BLOCKS.HR\n  | BLOCKS.QUOTE\n  | BLOCKS.EMBEDDED_ENTRY\n  | BLOCKS.EMBEDDED_ASSET\n  | BLOCKS.EMBEDDED_RESOURCE;\n\n/**\n * Array of all allowed block types inside list items\n */\nexport const LIST_ITEM_BLOCKS: TopLevelBlockEnum[] = [\n  BLOCKS.PARAGRAPH,\n  BLOCKS.HEADING_1,\n  BLOCKS.HEADING_2,\n  BLOCKS.HEADING_3,\n  BLOCKS.HEADING_4,\n  BLOCKS.HEADING_5,\n  BLOCKS.HEADING_6,\n  BLOCKS.OL_LIST,\n  BLOCKS.UL_LIST,\n  BLOCKS.HR,\n  BLOCKS.QUOTE,\n  BLOCKS.EMBEDDED_ENTRY,\n  BLOCKS.EMBEDDED_ASSET,\n  BLOCKS.EMBEDDED_RESOURCE,\n];\n\nexport const TABLE_BLOCKS = [\n  BLOCKS.TABLE,\n  BLOCKS.TABLE_ROW,\n  BLOCKS.TABLE_CELL,\n  BLOCKS.TABLE_HEADER_CELL,\n];\n\n/**\n * Array of all void block types\n */\nexport const VOID_BLOCKS = [\n  BLOCKS.HR,\n  BLOCKS.EMBEDDED_ENTRY,\n  BLOCKS.EMBEDDED_ASSET,\n  BLOCKS.EMBEDDED_RESOURCE,\n];\n\n/**\n * Dictionary of all container block types, and the set block types they accept as children.\n *\n * Note: This does not include `[BLOCKS.DOCUMENT]: TOP_LEVEL_BLOCKS`\n */\nexport const CONTAINERS = {\n  [BLOCKS.OL_LIST]: [BLOCKS.LIST_ITEM],\n  [BLOCKS.UL_LIST]: [BLOCKS.LIST_ITEM],\n  [BLOCKS.LIST_ITEM]: LIST_ITEM_BLOCKS,\n  [BLOCKS.QUOTE]: [BLOCKS.PARAGRAPH],\n  [BLOCKS.TABLE]: [BLOCKS.TABLE_ROW],\n  [BLOCKS.TABLE_ROW]: [BLOCKS.TABLE_CELL, BLOCKS.TABLE_HEADER_CELL],\n  [BLOCKS.TABLE_CELL]: [BLOCKS.PARAGRAPH],\n  [BLOCKS.TABLE_HEADER_CELL]: [BLOCKS.PARAGRAPH],\n};\n\n/**\n * Array of all heading levels\n */\nexport const HEADINGS = [\n  BLOCKS.HEADING_1,\n  BLOCKS.HEADING_2,\n  BLOCKS.HEADING_3,\n  BLOCKS.HEADING_4,\n  BLOCKS.HEADING_5,\n  BLOCKS.HEADING_6,\n];\n\n/**\n * Array of all block types that may contain text and inline nodes.\n */\nexport const TEXT_CONTAINERS = [BLOCKS.PARAGRAPH, ...HEADINGS];\n\n/**\n * Node types before `tables` release.\n */\nexport const V1_NODE_TYPES = [\n  BLOCKS.DOCUMENT,\n  BLOCKS.PARAGRAPH,\n  BLOCKS.HEADING_1,\n  BLOCKS.HEADING_2,\n  BLOCKS.HEADING_3,\n  BLOCKS.HEADING_4,\n  BLOCKS.HEADING_5,\n  BLOCKS.HEADING_6,\n  BLOCKS.OL_LIST,\n  BLOCKS.UL_LIST,\n  BLOCKS.LIST_ITEM,\n  BLOCKS.HR,\n  BLOCKS.QUOTE,\n  BLOCKS.EMBEDDED_ENTRY,\n  BLOCKS.EMBEDDED_ASSET,\n  INLINES.HYPERLINK,\n  INLINES.ENTRY_HYPERLINK,\n  INLINES.ASSET_HYPERLINK,\n  INLINES.EMBEDDED_ENTRY,\n  'text',\n];\n\n/**\n * Marks before `superscript` & `subscript` release.\n */\nexport const V1_MARKS = [MARKS.BOLD, MARKS.CODE, MARKS.ITALIC, MARKS.UNDERLINE];\n","import { Document } from './types';\nimport { BLOCKS } from './blocks';\n\n/**\n * A rich text document considered to be empty.\n * Any other document structure than this is not considered empty.\n */\nconst EMPTY_DOCUMENT: Document = {\n  nodeType: BLOCKS.DOCUMENT,\n  data: {},\n  content: [\n    {\n      nodeType: BLOCKS.PARAGRAPH,\n      data: {},\n      content: [\n        {\n          nodeType: 'text',\n          value: '',\n          marks: [],\n          data: {},\n        },\n      ],\n    },\n  ],\n};\n\nexport default EMPTY_DOCUMENT;\n","import { Node, Block, Inline, Text } from './types';\nimport { BLOCKS } from './blocks';\nimport { INLINES } from './inlines';\n\n/**\n * Tiny replacement for Object.values(object).includes(key) to\n * avoid including CoreJS polyfills\n */\nfunction hasValue(obj: Record<string, unknown>, value: unknown) {\n  for (const key of Object.keys(obj)) {\n    if (value === obj[key]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Checks if the node is an instance of Inline.\n */\nexport function isInline(node: Node): node is Inline {\n  return hasValue(INLINES, node.nodeType);\n}\n\n/**\n * Checks if the node is an instance of Block.\n */\nexport function isBlock(node: Node): node is Block {\n  return hasValue(BLOCKS, node.nodeType);\n}\n\n/**\n * Checks if the node is an instance of Text.\n */\nexport function isText(node: Node): node is Text {\n  return node.nodeType === 'text';\n}\n","export { BLOCKS } from './blocks';\nexport { INLINES } from './inlines';\nexport { default as MARKS } from './marks';\n\nexport * from './schemaConstraints';\n\nexport * from './types';\nexport * from './nodeTypes';\n\nexport { default as EMPTY_DOCUMENT } from './emptyDocument';\n\nimport * as helpers from './helpers';\nexport { helpers };\n","import escape from 'escape-html';\nimport {\n  Document,\n  Mark,\n  Text,\n  BLOCKS,\n  MARKS,\n  INLINES,\n  Block,\n  Inline,\n  helpers,\n} from '@contentful/rich-text-types';\n\nconst attributeValue = (value: string) => `\"${value.replace(/\"/g, '&quot;')}\"`;\n\nconst defaultNodeRenderers: RenderNode = {\n  [BLOCKS.PARAGRAPH]: (node, next) => `<p>${next(node.content)}</p>`,\n  [BLOCKS.HEADING_1]: (node, next) => `<h1>${next(node.content)}</h1>`,\n  [BLOCKS.HEADING_2]: (node, next) => `<h2>${next(node.content)}</h2>`,\n  [BLOCKS.HEADING_3]: (node, next) => `<h3>${next(node.content)}</h3>`,\n  [BLOCKS.HEADING_4]: (node, next) => `<h4>${next(node.content)}</h4>`,\n  [BLOCKS.HEADING_5]: (node, next) => `<h5>${next(node.content)}</h5>`,\n  [BLOCKS.HEADING_6]: (node, next) => `<h6>${next(node.content)}</h6>`,\n  [BLOCKS.EMBEDDED_ENTRY]: (node, next) => `<div>${next(node.content)}</div>`,\n  [BLOCKS.EMBEDDED_RESOURCE]: (node, next) => `<div>${next(node.content)}</div>`,\n  [BLOCKS.UL_LIST]: (node, next) => `<ul>${next(node.content)}</ul>`,\n  [BLOCKS.OL_LIST]: (node, next) => `<ol>${next(node.content)}</ol>`,\n  [BLOCKS.LIST_ITEM]: (node, next) => `<li>${next(node.content)}</li>`,\n  [BLOCKS.QUOTE]: (node, next) => `<blockquote>${next(node.content)}</blockquote>`,\n  [BLOCKS.HR]: () => '<hr/>',\n  [BLOCKS.TABLE]: (node, next) => `<table>${next(node.content)}</table>`,\n  [BLOCKS.TABLE_ROW]: (node, next) => `<tr>${next(node.content)}</tr>`,\n  [BLOCKS.TABLE_HEADER_CELL]: (node, next) => `<th>${next(node.content)}</th>`,\n  [BLOCKS.TABLE_CELL]: (node, next) => `<td>${next(node.content)}</td>`,\n  [INLINES.ASSET_HYPERLINK]: (node) => defaultInline(INLINES.ASSET_HYPERLINK, node as Inline),\n  [INLINES.ENTRY_HYPERLINK]: (node) => defaultInline(INLINES.ENTRY_HYPERLINK, node as Inline),\n  [INLINES.EMBEDDED_ENTRY]: (node) => defaultInline(INLINES.EMBEDDED_ENTRY, node as Inline),\n  [INLINES.HYPERLINK]: (node, next) => {\n    const href = typeof node.data.uri === 'string' ? node.data.uri : '';\n    return `<a href=${attributeValue(href)}>${next(node.content)}</a>`;\n  },\n};\n\nconst defaultMarkRenderers: RenderMark = {\n  [MARKS.BOLD]: (text) => `<b>${text}</b>`,\n  [MARKS.ITALIC]: (text) => `<i>${text}</i>`,\n  [MARKS.UNDERLINE]: (text) => `<u>${text}</u>`,\n  [MARKS.CODE]: (text) => `<code>${text}</code>`,\n  [MARKS.SUPERSCRIPT]: (text) => `<sup>${text}</sup>`,\n  [MARKS.SUBSCRIPT]: (text) => `<sub>${text}</sub>`,\n};\n\nconst defaultInline = (type: string, node: Inline) =>\n  `<span>type: ${escape(type)} id: ${escape(node.data.target.sys.id)}</span>`;\n\nexport type CommonNode = Text | Block | Inline;\n\nexport interface Next {\n  (nodes: CommonNode[]): string;\n}\n\nexport interface NodeRenderer {\n  (node: Block | Inline, next: Next): string;\n}\n\nexport interface RenderNode {\n  [k: string]: NodeRenderer;\n}\n\nexport interface RenderMark {\n  [k: string]: (text: string) => string;\n}\n\nexport interface Options {\n  /**\n   * Node renderers\n   */\n  renderNode?: RenderNode;\n  /**\n   * Mark renderers\n   */\n  renderMark?: RenderMark;\n}\n\n/**\n * Serialize a Contentful Rich Text `document` to an html string.\n */\nexport function documentToHtmlString(\n  richTextDocument: Document,\n  options: Partial<Options> = {},\n): string {\n  if (!richTextDocument || !richTextDocument.content) {\n    return '';\n  }\n\n  return nodeListToHtmlString(richTextDocument.content, {\n    renderNode: {\n      ...defaultNodeRenderers,\n      ...options.renderNode,\n    },\n    renderMark: {\n      ...defaultMarkRenderers,\n      ...options.renderMark,\n    },\n  });\n}\n\nfunction nodeListToHtmlString(nodes: CommonNode[], { renderNode, renderMark }: Options): string {\n  return nodes.map<string>((node) => nodeToHtmlString(node, { renderNode, renderMark })).join('');\n}\n\nfunction nodeToHtmlString(node: CommonNode, { renderNode, renderMark }: Options): string {\n  if (helpers.isText(node)) {\n    const nodeValue = escape(node.value);\n    if (node.marks.length > 0) {\n      return node.marks.reduce((value: string, mark: Mark) => {\n        if (!renderMark[mark.type]) {\n          return value;\n        }\n        return renderMark[mark.type](value);\n      }, nodeValue);\n    }\n\n    return nodeValue;\n  } else {\n    const nextNode: Next = (nodes) => nodeListToHtmlString(nodes, { renderMark, renderNode });\n    if (!node.nodeType || !renderNode[node.nodeType]) {\n      // TODO: Figure what to return when passed an unrecognized node.\n      return '';\n    }\n    return renderNode[node.nodeType](node, nextNode);\n  }\n}\n"],"names":["blocks_1","inlines_1","BLOCKS","INLINES","MARKS","escape","helpers"],"mappings":"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"}