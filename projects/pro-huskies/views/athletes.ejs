<%- include('header.ejs') %>
<%

%>

<inner-column class="athletes">
	<h1 class="screaming-voice">Athletes</h1>
	
	<section class="sort">
		<label for="sortBy" class="normal-voice">
			Sort By:
		</label>

		<select id="sortBy">
			<option value="all">- - Select - -</option>

			<option value="lastName">Last Name</option>
			
			<option value="firstName">First Name</option>
		</select>			
	</section>

	<%- include('filter-menu.ejs') %>
	
	<ul class="card-grid">
		<% athletes.forEach( function(athlete) { %>

			<li 
				class="athlete" 
				data-sport="<%=athlete.sport%>" 
				data-year="<%=athlete.collegeSeasons%>";
			>
				<%- include('athlete-card.ejs', {athlete}) %>

				<div class="card-details">
					<a href="athlete/<%=athlete.slug%>">Athlete Bio</a>
					<button id='flipper'>Flip Card</button>
				</div>
			</li>

		<%});%>
	</ul>
</inner-column>

<%- include('footer.ejs') %>
<%- include('scripts/filter-menu-script.ejs') %>
<script>
	// - - - - FILTER BY SPORT CHECKBOX - - - - - - - - 
	const $li = document.querySelectorAll('li[class="athlete"]');
	const sportsCheckboxes = document.querySelectorAll('.sportsOptions input[type="checkbox"]');
	const yearsCheckboxes = document.querySelectorAll('.yearsOptions input[type="checkbox"]');
	const yearsLabel = document.querySelectorAll('.yearsSelect label')

 	function getSelectedAthletes(checkboxType) {
		const selectedItems = [];

		checkboxType.forEach( function(checkbox) {
			if (checkbox.checked) {
				selectedItems.push(checkbox.getAttribute('data-filter'));
			}
		})
		return selectedItems;
	}

	const allYears = [];

	sportsCheckboxes.forEach( function(checkbox) {
		checkbox.addEventListener('change', function() {
			const selectedSports = getSelectedAthletes(sportsCheckboxes);
			const allYears = [];

			$li.forEach( function(item) {
				item.style.display = 'none';
			});

			selectedSports.forEach( function(selectedSport) {
				$li.forEach( function(item) {
					if (item.getAttribute('data-sport') == selectedSport) {
						item.style.display = 'block';		

						const dataYears = item.getAttribute('data-year').split(',');
						allYears.push(...dataYears);

						yearsLabel.forEach( function(label) {
							const labelYear = label.getAttribute('for');
							const input = document.querySelectorAll('.yearsSelect input');
							if (allYears.includes(labelYear)) {
								label.style.display = 'block';
								console.log('label: ', label)
								yearsCheckboxes.forEach( function(checkbox) {
									checkbox.checked = true;
								})
							} else {
								label.style.display = 'none';
								yearsCheckboxes.checked = false;
							}
						})

					} else {
						// label.style.display = 'none';
					}
				})
			})
		})
	})

 	// - - - - FILTER BY YEAR CHECKBOX - - - - - - - - 
	//If the year is checkmarked
	//then get the li's years
  //Match the li years with the checkmarked year
  function getSelectedYears() {
	  const selectedYears = [];

	  for (const checkbox of yearsCheckboxes) {
	    if (checkbox.checked) {
	      selectedYears.push(checkbox.id);
	    }
	  }
	  return selectedYears;
	  console.log('selectedYears: ', selectedYears);
	};

	
	function filterByYear() {
		const selectedYears = getSelectedYears();
		const athleteList = document.querySelectorAll('.athlete');

		athleteList.forEach( function(athlete) {
			const athleteSeasons = athlete.getAttribute('data-year').split(',');

			const isVisible = athleteSeasons.some( function(year) {
				return selectedYears.includes(year);
			});
			athlete.style.display = isVisible ? 'block' : 'none';
		})
	}

	yearsCheckboxes.forEach( function(checkbox) {
		checkbox.addEventListener('change', function() {
			filterByYear();
		})
	})
	// yearsCheckboxes.forEach( function(checkbox) {
	// 	checkbox.addEventListener('change', function() {
	// 		const selectedYears = getSelectedAthletes(yearsCheckboxes);
	// 		$li.forEach( function(item) {
 	// 			item.style.display = 'none';
 	// 		});

 	// 		selectedYears.forEach( function(selectedYear) {
 	// 			$li.forEach( function(item) {
 	// 				const dataYears = item.getAttribute('data-year').split(',');
 	// 				if ( dataYears.includes(selectedYear) ) {
 	// 						item.style.display = 'block';						
 	// 						console.log('dataYears display item: ', item)	
 	// 				} else {
 	// 					item.style.display = 'none';	
 	// 					console.log('dataYears hide item: ', item)	
 	// 				}
 	// 			})
 	// 		})

	// 	})
	// })


	// - - - - SORT BY NAME - - - - - - - -
	const $sort = document.getElementById('sortBy');
	const $names = document.querySelectorAll('.name');

	const fNamesArray = [];
	const lNamesArray = [];

	$names.forEach(function(nameElement) {
		const fullName = nameElement.innerText;
		const nameSplit = fullName.split(' ');
		const fName = nameSplit[0];
		const lName = nameSplit[1];	

		fNamesArray.push(fName);
		lNamesArray.push(lName);
	})

	$sort.addEventListener('change', function() {
		selectedSort = $sort.value;
		console.log('change');
		if (selectedSort == 'lastName') {
			const sortedNames = lNamesArray.slice().sort();
			console.log('SORTED BY LAST NAME: ', sortedNames);

			reorderList(sortedNames);
		}

		if (selectedSort == 'firstName') {
			const sortedNames = fNamesArray.slice().sort();
			console.log('SORTED BY FIRST NAME: ', sortedNames)

			reorderList(sortedNames);
		}
	})

	function reorderList(sortedList) {
		const ul = document.querySelector('.card-grid');
		const $li = document.querySelectorAll('li[class="athlete"]');
		const newList = [];

		sortedList.forEach( function(name) {
			const li = [...$li].find( function(li) {
				return li.querySelector('.name').innerText.includes(name);
			});

			if (li instanceof Element) {
				newList.push(li);
			}
		})

		// ul.innerHTML = '';

		newList.forEach(function(li) {
			ul.appendChild(li);
		});
	}

	// - - - - FLIP BUTTON - - - - - - - - - - - -
	const $athleteCard = document.querySelectorAll('athlete-card');
	const $button = document.querySelectorAll('button');

	$button.forEach( function($button, index) {
		let isFlipped = false;	
		
		$button.addEventListener('click', function(event) {
			$athleteCard[index].classList.toggle('hovered');
			this.innerText = 'flip back';

			if (isFlipped) {
				this.innerText = 'Flip Card';
			} else {
				this.innerText = 'Flip Back';
			}

			isFlipped = !isFlipped;
		});
	});

	// - - - - COUNT ATHLETES - - - - - - - -  	
	// function countVisibleLi() {
	//   const visibleLiCount = document.querySelectorAll('li[class="athlete"][style="display: block;"]').length;
	//   console.log(`Number of visible <li> elements: ${visibleLiCount}`);
	// }
	// window.addEventListener('load', countVisibleLi);
 	// const hidden = document.querySelectorAll('li[class="athlete"][style="display: none;"]').length;

 	// console.log('hidden: ', hidden);
	// console.log('li count: ', $li.length)

	// // // - - - - FILTER BY SPORT - - - - - - - - 
	// const select = document.getElementById('filterSport')
	// let selectedSport = '';
	// const $li = document.querySelectorAll('li[class="athlete"]');

	// select.addEventListener('change', function() {
	// 	selectedSport = select.value;
	// 	console.log(selectedSport);
	// 	filterBySport(selectedSport);
	// 	console.log($li);
	// })

	// function filterBySport(sport) {
	// 	$li.forEach( function(item) {
	// 		const dataSport = item.getAttribute('data-sport');

	// 		if (selectedSport === dataSport || selectedSport === 'all') {
	// 			item.style.display = 'block';
	// 		} else {
	// 			item.style.display = 'none';
	// 		}
	// 	});
	// }
</script>
