<%- include('header.ejs') %>
<%

%>

<inner-column class="athletes">
	<h1 class="screaming-voice">Athletes</h1>
	
	<section class="sort">
		<label for="sortBy" class="normal-voice">
			Sort By:
		</label>

		<select id="sortBy">
			<option value="all">- - Select - -</option>

			<option value="lastName">Last Name</option>
			
			<option value="firstName">First Name</option>
		</select>			
	</section>

	<%- include('filter-menu.ejs') %>
	
	<ul class="card-grid">
		<% athletes.forEach( function(athlete) { %>

			<li 
				class="athlete" 
				data-sport="<%=athlete.sport%>" 
				data-year="<%=athlete.collegeSeasons%>";
			>
				<%- include('athlete-card.ejs', {athlete}) %>

				<div class="card-details">
					<a href="athlete/<%=athlete.slug%>">Athlete Bio</a>
					<button id='flipper'>Flip Card</button>
				</div>
			</li>

		<%});%>
	</ul>
</inner-column>

<%- include('footer.ejs') %>
<%- include('scripts/filter-menu-script.ejs') %>
<script>
	// - - - - FILTER BY SPORT CHECKBOX - - - - - - - - 

	//User clicks on specific sport
	//Li's with corresponding sport display
	//years with corresponding sport display
	//if user checks/unchecks available year, only that specific sport appears

	//Get all of the sports inputs
	//Listen for a change in the sports inputs
	//When a sport is selected - hide unselected li's not associated with that sport
	//get data-years from the available athletes associated with that sport
	//match available years with year inputs
	//if there's no match - hide those years
	//If an available year is checked-unchecked, only display the athletes from the selected sport
	const $li = document.querySelectorAll('li[class="athlete"]');
	const sportsCheckboxes = document.querySelectorAll('.sportsOptions input[type="checkbox"]');
	const yearsCheckboxes = document.querySelectorAll('.yearsOptions input[type="checkbox"]');
	const yearsLabel = document.querySelectorAll('.yearsSelect label')

 	function getSelectedAthletes(checkboxType) {
		const selectedItems = [];

		checkboxType.forEach( function(checkbox) {
			if (checkbox.checked) {
				selectedItems.push(checkbox.getAttribute('data-filter'));
			}
		})
		return selectedItems;
	}

	const allYears = [];

	sportsCheckboxes.forEach( function(checkbox) {
		checkbox.addEventListener('change', function() {
			const selectedSports = getSelectedAthletes(sportsCheckboxes);
			const allYears = [];

			$li.forEach( function(item) {
				item.style.display = 'none';
			});

			selectedSports.forEach( function(selectedSport) {
				$li.forEach( function(item) {
					if (item.getAttribute('data-sport') == selectedSport) {
						item.style.display = 'block';		

						const dataYears = item.getAttribute('data-year').split(',');
						allYears.push(...dataYears);

						yearsLabel.forEach( function(checkbox) {
							const year = checkbox.getAttribute('data-filter');
							console.log('checkbox: ', checkbox)
							const label = checkbox.getAttribute('for');

							if (allYears.includes(label)) {
								checkbox.style.display = 'block';
								console.log('year: ', year)
							} else {
								checkbox.style.display = 'none';
							}
						})

					} 
				})
			})
		})
	})

 	// const sportsCheckboxes = document.querySelectorAll('.sportsOptions input[type="checkbox"]');
 	// const $li = document.querySelectorAll('li[class="athlete"]');
 	
 	// console.log('SPORTS CHECKBOXES: ', sportsCheckboxes);
 	// console.log('LIST ITEMS: ', $li)
 	
 	// function getSelectedAthletes(checkboxType) {
 	// 	const selectedItems = [];

 	// 	checkboxType.forEach( function(checkbox) {
 	// 		if (checkbox.checked) {
 	// 			selectedItems.push(checkbox.getAttribute('data-filter'));
 	// 		}
 	// 	})
 	// 	return selectedItems;
 	// }

 	// sportsCheckboxes.forEach( function(checkbox) {
 	// 	checkbox.addEventListener('change', function() {
 	// 		const selectedSports = getSelectedAthletes(sportsCheckboxes);

 	// 		$li.forEach( function(item) {
 	// 			item.style.display = 'none';
 	// 		});

 	// 		selectedSports.forEach( function(selectedSport) {
 	// 			$li.forEach( function(item) {
 	// 				if (item.getAttribute('data-sport') == selectedSport) {
 	// 						item.style.display = 'block';							
 	// 				}
 	// 			})
 	// 		})
 	// 	})
 	// })
 	// - - - - FILTER BY YEAR CHECKBOX - - - - - - - - 
	// const yearsCheckboxes = document.querySelectorAll('.yearsOptions input[type="checkbox"]');

	yearsCheckboxes.forEach( function(checkbox) {
		checkbox.addEventListener('change', function() {
			const selectedYears = getSelectedAthletes(yearsCheckboxes);
			$li.forEach( function(item) {
 				item.style.display = 'none';
 			});

 			selectedYears.forEach( function(selectedYear) {
 				$li.forEach( function(item) {
 					const dataYears = item.getAttribute('data-year').split(',');
 					if ( dataYears.includes(selectedYear) ) {
 							item.style.display = 'block';							
 					}
 				})
 			})

		})
	})


	// - - - - SORT BY NAME - - - - - - - -
	const $sort = document.getElementById('sortBy');
	const $names = document.querySelectorAll('.name');

	const fNamesArray = [];
	const lNamesArray = [];

	$names.forEach(function(nameElement) {
		const fullName = nameElement.innerText;
		const nameSplit = fullName.split(' ');
		const fName = nameSplit[0];
		const lName = nameSplit[1];	

		fNamesArray.push(fName);
		lNamesArray.push(lName);
	})

	$sort.addEventListener('change', function() {
		selectedSort = $sort.value;
		console.log('change');
		if (selectedSort == 'lastName') {
			const sortedNames = lNamesArray.slice().sort();
			console.log('SORTED BY LAST NAME: ', sortedNames);

			reorderList(sortedNames);
		}

		if (selectedSort == 'firstName') {
			const sortedNames = fNamesArray.slice().sort();
			console.log('SORTED BY FIRST NAME: ', sortedNames)

			reorderList(sortedNames);
		}
	})

	function reorderList(sortedList) {
		const ul = document.querySelector('.card-grid');
		const $li = document.querySelectorAll('li[class="athlete"]');
		const newList = [];

		sortedList.forEach( function(name) {
			const li = [...$li].find( function(li) {
				return li.querySelector('.name').innerText.includes(name);
			});

			if (li instanceof Element) {
				newList.push(li);
			}
		})

		// ul.innerHTML = '';

		newList.forEach(function(li) {
			ul.appendChild(li);
		});
	}

	// - - - - FLIP BUTTON - - - - - - - - - - - -
	const $athleteCard = document.querySelectorAll('athlete-card');
	const $button = document.querySelectorAll('button');

	$button.forEach( function($button, index) {
		let isFlipped = false;	
		
		$button.addEventListener('click', function(event) {
			$athleteCard[index].classList.toggle('hovered');
			this.innerText = 'flip back';

			if (isFlipped) {
				this.innerText = 'Flip Card';
			} else {
				this.innerText = 'Flip Back';
			}

			isFlipped = !isFlipped;
		});
	});

	// - - - - COUNT ATHLETES - - - - - - - -  	
	// function countVisibleLi() {
	//   const visibleLiCount = document.querySelectorAll('li[class="athlete"][style="display: block;"]').length;
	//   console.log(`Number of visible <li> elements: ${visibleLiCount}`);
	// }
	// window.addEventListener('load', countVisibleLi);
 	// const hidden = document.querySelectorAll('li[class="athlete"][style="display: none;"]').length;

 	// console.log('hidden: ', hidden);
	// console.log('li count: ', $li.length)

	// // // - - - - FILTER BY SPORT - - - - - - - - 
	// const select = document.getElementById('filterSport')
	// let selectedSport = '';
	// const $li = document.querySelectorAll('li[class="athlete"]');

	// select.addEventListener('change', function() {
	// 	selectedSport = select.value;
	// 	console.log(selectedSport);
	// 	filterBySport(selectedSport);
	// 	console.log($li);
	// })

	// function filterBySport(sport) {
	// 	$li.forEach( function(item) {
	// 		const dataSport = item.getAttribute('data-sport');

	// 		if (selectedSport === dataSport || selectedSport === 'all') {
	// 			item.style.display = 'block';
	// 		} else {
	// 			item.style.display = 'none';
	// 		}
	// 	});
	// }
</script>
